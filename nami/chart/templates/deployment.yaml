apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "nami.labels" . | nindent 4 }}
    hasuraService: custom
  name: {{ include "nami.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "nami.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "nami.selectorLabels" . | nindent 8 }}
      annotations:
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "internal-app"
        vault.hashicorp.com/agent-inject-secret-database-config.txt: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{`{{- with secret "internal/data/database/config" -}}
            postgres1://{{ .Data.username }}:{{ .Data.password }}@35.196.127.103:5432/nami
          {{- end }}`}}
    spec:
      serviceAccountName: nami
      containers:
      - image: hasura/graphql-engine:v1.3.3
        imagePullPolicy: IfNotPresent
        name: {{ .Chart.Name }}
        env:
        - name: HASURA_GRAPHQL_DATABASE_URL
          value: postgres://nami:nami@35.196.127.103:5432/nami
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: "true"
        - name: HASURA_GRAPHQL_DEV_MODE
          value: "true"
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          value: "verylongpasswordstring"
        - name: HASURA_GRAPHQL_ENABLED_APIS
          value: "graphql,metadata,config"
        - name: HASURA_GRAPHQL_CONSOLE_ASSETS_DIR
          value: "/srv/console-assets"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
