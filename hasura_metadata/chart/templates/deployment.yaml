apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "hasura-metadata.labels" . | nindent 4 }}
  name: {{ include "hasura-metadata.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hasura-metadata.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "hasura-metadata.selectorLabels" . | nindent 8 }}
      annotations:
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "internal-app"
        vault.hashicorp.com/agent-inject-secret-database-config: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config: |
          {{`{{- with secret "internal/data/database/config" -}}
            export HASURA_GRAPHQL_DATABASE_URL=postgres://{{ .Data.data.username }}:{{ .Data.data.password }}@34.75.168.116:5432/nami
          {{- end }}`}}
    spec:
      serviceAccountName: hasura-metadata
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: {{ .Chart.Name }}
        command: ["/bin/sh"]
        args:
            ["-c", "source /vault/secrets/database-config && docker-entrypoint.sh graphql-engine serve"]
        env:
        - name: ACTION_BASE_URL
          value: "http://nami.{{ .Release.Namespace }}.svc.cluster.local"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
